Description: >
    Cesarin Abreu
    Deploying a cluster Server.
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

Resources:

 #instace profile contains the IAM Role name(s) (placeholder) that we want to associate to our auto scaling EC2 Servers
  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - UdacityS3ReadOnlyEC2

# --> --> Setting up Servers --> -->
#Build Security Group for Load Balancer
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

#Security Group for the cluster server
  ClusterServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
# <-- <-- Setting up Servers <-- <--

 # cluster Config: ClusterConfig
    
# <-- <-- Cluster Configuration <-- <--

  
# Autoscaling Group. Launch servers in private subnets.
  ClusterGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: ClusterConfig
      MinSize: '4'
      MaxSize: '5'
      TargetGroupARNs:
      - Ref: ClusterTargetGroup
# <-- <-- Autoscaling Group <-- <--

# Load Balancer in the public subnets.
  ClusterLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB-SN1"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB-SN2"
      SecurityGroups:
      - Ref: LBSecGroup
      
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: ClusterTargetGroup
      LoadBalancerArn:
        Ref: ClusterLB
      Port: "80"
      Protocol: HTTP

  # cluster load balancer listener Rule    
  CLBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'ClusterTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1

  ClusterTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: '80'                  
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"
# <-- <-- Load Balancer <-- <--

Outputs:
    ClusterServerSecGroup:
          Description: "The ClusterServerSecGroup"
          Value:
            Ref: ClusterServerSecGroup

    ClusterGrp:
      Description: "The AutoScalingGroup"
      Value:
        Ref: "ClusterGroup"
      Export:
            Name: !Sub ${EnvironmentName}-Cluster-SG

    ClusterLaunchConf:
      Description: "The Cluster Launch Configguration"
      Value:
        Ref: "ClusterTargetGroup"
      Export:
            Name: !Sub ${EnvironmentName}-Cluster-LC

    LoadBalancerDNSName:
      Description: The DNSName of the load balancer
      Value: !Join [ "", [ "http://", !GetAtt ClusterLB.DNSName ]]
      Export:
            Name: !Sub ${EnvironmentName}-LB-DNS